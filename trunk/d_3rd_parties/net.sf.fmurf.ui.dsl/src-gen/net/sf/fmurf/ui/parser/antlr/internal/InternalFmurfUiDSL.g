/*
* generated by Xtext
*/
grammar InternalFmurfUiDSL;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package net.sf.fmurf.ui.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package net.sf.fmurf.ui.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import net.sf.fmurf.ui.services.FmurfUiDSLGrammarAccess;

}

@parser::members {

 	private FmurfUiDSLGrammarAccess grammarAccess;
 	
    public InternalFmurfUiDSLParser(TokenStream input, IAstFactory factory, FmurfUiDSLGrammarAccess grammarAccess) {
        this(input);
        this.factory = factory;
        registerRules(grammarAccess.getGrammar());
        this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected InputStream getTokenFile() {
    	ClassLoader classLoader = getClass().getClassLoader();
    	return classLoader.getResourceAsStream("net/sf/fmurf/ui/parser/antlr/internal/InternalFmurfUiDSL.tokens");
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "FMFUI";	
   	}
   	
   	@Override
   	protected FmurfUiDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleFMFUI
entryRuleFMFUI returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFMFUIRule(), currentNode); }
	 iv_ruleFMFUI=ruleFMFUI 
	 { $current=$iv_ruleFMFUI.current; } 
	 EOF 
;

// Rule FMFUI
ruleFMFUI returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFMFUIAccess().getSettingsFMFSettingsParserRuleCall_0_0(), currentNode); 
	    }
		lv_settings_0_0=ruleFMFSettings		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFMFUIRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"settings",
	        		lv_settings_0_0, 
	        		"FMFSettings", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFMFUIAccess().getFiducialsFiducialParserRuleCall_1_0(), currentNode); 
	    }
		lv_fiducials_1_0=ruleFiducial		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFMFUIRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"fiducials",
	        		lv_fiducials_1_0, 
	        		"Fiducial", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*)
;





// Entry rule entryRuleFiducial
entryRuleFiducial returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFiducialRule(), currentNode); }
	 iv_ruleFiducial=ruleFiducial 
	 { $current=$iv_ruleFiducial.current; } 
	 EOF 
;

// Rule Fiducial
ruleFiducial returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'fiducial' 
    {
        createLeafNode(grammarAccess.getFiducialAccess().getFiducialKeyword_0(), null); 
    }
(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getFiducialAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFiducialRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	':' 
    {
        createLeafNode(grammarAccess.getFiducialAccess().getColonKeyword_2(), null); 
    }
(
(
		lv_uid_3_0=RULE_INT
		{
			createLeafNode(grammarAccess.getFiducialAccess().getUidINTTerminalRuleCall_3_0(), "uid"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFiducialRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"uid",
	        		lv_uid_3_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getFiducialAccess().getLeftCurlyBracketKeyword_4(), null); 
    }
	'style:' 
    {
        createLeafNode(grammarAccess.getFiducialAccess().getStyleKeyword_5(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFiducialAccess().getStyleFMFFidStyleEnumEnumRuleCall_6_0(), currentNode); 
	    }
		lv_style_6_0=ruleFMFFidStyleEnum		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFiducialRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"style",
	        		lv_style_6_0, 
	        		"FMFFidStyleEnum", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'kind:' 
    {
        createLeafNode(grammarAccess.getFiducialAccess().getKindKeyword_7(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFiducialAccess().getKindFMFKindEnumRuleCall_8_0(), currentNode); 
	    }
		lv_kind_8_0=ruleFMFKind		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFiducialRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"kind",
	        		lv_kind_8_0, 
	        		"FMFKind", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'foreground:' 
    {
        createLeafNode(grammarAccess.getFiducialAccess().getForegroundKeyword_9(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFiducialAccess().getFgFMFFidColorEnumEnumRuleCall_10_0(), currentNode); 
	    }
		lv_fg_10_0=ruleFMFFidColorEnum		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFiducialRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"fg",
	        		lv_fg_10_0, 
	        		"FMFFidColorEnum", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'background:' 
    {
        createLeafNode(grammarAccess.getFiducialAccess().getBackgroundKeyword_11(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFiducialAccess().getBgFMFFidColorEnumEnumRuleCall_12_0(), currentNode); 
	    }
		lv_bg_12_0=ruleFMFFidColorEnum		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFiducialRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"bg",
	        		lv_bg_12_0, 
	        		"FMFFidColorEnum", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'radius:' 
    {
        createLeafNode(grammarAccess.getFiducialAccess().getRadiusKeyword_13(), null); 
    }
(
(
		lv_radius_14_0=RULE_INT
		{
			createLeafNode(grammarAccess.getFiducialAccess().getRadiusINTTerminalRuleCall_14_0(), "radius"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFiducialRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"radius",
	        		lv_radius_14_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'proxima:' 
    {
        createLeafNode(grammarAccess.getFiducialAccess().getProximaKeyword_15(), null); 
    }
(
(
		lv_proxima_16_0=RULE_INT
		{
			createLeafNode(grammarAccess.getFiducialAccess().getProximaINTTerminalRuleCall_16_0(), "proxima"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFiducialRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"proxima",
	        		lv_proxima_16_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'proximaVisible:' 
    {
        createLeafNode(grammarAccess.getFiducialAccess().getProximaVisibleKeyword_17(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFiducialAccess().getProximaVisibleFMFProximaVisibleEnumEnumRuleCall_18_0(), currentNode); 
	    }
		lv_proximaVisible_18_0=ruleFMFProximaVisibleEnum		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFiducialRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"proximaVisible",
	        		lv_proximaVisible_18_0, 
	        		"FMFProximaVisibleEnum", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'function:' 
    {
        createLeafNode(grammarAccess.getFiducialAccess().getFunctionKeyword_19(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFiducialAccess().getFunctionFMFFidFunctionEnumEnumRuleCall_20_0(), currentNode); 
	    }
		lv_function_20_0=ruleFMFFidFunctionEnum		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFiducialRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"function",
	        		lv_function_20_0, 
	        		"FMFFidFunctionEnum", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'range:' 
    {
        createLeafNode(grammarAccess.getFiducialAccess().getRangeKeyword_21(), null); 
    }
(
(
		lv_range_22_0=RULE_INT
		{
			createLeafNode(grammarAccess.getFiducialAccess().getRangeINTTerminalRuleCall_22_0(), "range"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFiducialRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"range",
	        		lv_range_22_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'}' 
    {
        createLeafNode(grammarAccess.getFiducialAccess().getRightCurlyBracketKeyword_23(), null); 
    }
)
;





// Entry rule entryRuleFMFSettings
entryRuleFMFSettings returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFMFSettingsRule(), currentNode); }
	 iv_ruleFMFSettings=ruleFMFSettings 
	 { $current=$iv_ruleFMFSettings.current; } 
	 EOF 
;

// Rule FMFSettings
ruleFMFSettings returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'settings : {' 
    {
        createLeafNode(grammarAccess.getFMFSettingsAccess().getSettingsKeyword_0(), null); 
    }
	'OscReceivePort:' 
    {
        createLeafNode(grammarAccess.getFMFSettingsAccess().getOscReceivePortKeyword_1(), null); 
    }
(
(
		lv_oscReceivePort_2_0=RULE_INT
		{
			createLeafNode(grammarAccess.getFMFSettingsAccess().getOscReceivePortINTTerminalRuleCall_2_0(), "oscReceivePort"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFMFSettingsRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"oscReceivePort",
	        		lv_oscReceivePort_2_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'OscSendAddress:' 
    {
        createLeafNode(grammarAccess.getFMFSettingsAccess().getOscSendAddressKeyword_3(), null); 
    }
(
(
		lv_oscSendAddress_4_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getFMFSettingsAccess().getOscSendAddressSTRINGTerminalRuleCall_4_0(), "oscSendAddress"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFMFSettingsRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"oscSendAddress",
	        		lv_oscSendAddress_4_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'OscSendPort:' 
    {
        createLeafNode(grammarAccess.getFMFSettingsAccess().getOscSendPortKeyword_5(), null); 
    }
(
(
		lv_oscSendPort_6_0=RULE_INT
		{
			createLeafNode(grammarAccess.getFMFSettingsAccess().getOscSendPortINTTerminalRuleCall_6_0(), "oscSendPort"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFMFSettingsRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"oscSendPort",
	        		lv_oscSendPort_6_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'TuioPort:' 
    {
        createLeafNode(grammarAccess.getFMFSettingsAccess().getTuioPortKeyword_7(), null); 
    }
(
(
		lv_tuioPort_8_0=RULE_INT
		{
			createLeafNode(grammarAccess.getFMFSettingsAccess().getTuioPortINTTerminalRuleCall_8_0(), "tuioPort"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFMFSettingsRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"tuioPort",
	        		lv_tuioPort_8_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'liveRate:' 
    {
        createLeafNode(grammarAccess.getFMFSettingsAccess().getLiveRateKeyword_9(), null); 
    }
(
(
		lv_liveRate_10_0=RULE_INT
		{
			createLeafNode(grammarAccess.getFMFSettingsAccess().getLiveRateINTTerminalRuleCall_10_0(), "liveRate"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFMFSettingsRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"liveRate",
	        		lv_liveRate_10_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'processingRate:' 
    {
        createLeafNode(grammarAccess.getFMFSettingsAccess().getProcessingRateKeyword_11(), null); 
    }
(
(
		lv_processingRate_12_0=RULE_INT
		{
			createLeafNode(grammarAccess.getFMFSettingsAccess().getProcessingRateINTTerminalRuleCall_12_0(), "processingRate"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFMFSettingsRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"processingRate",
	        		lv_processingRate_12_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'}' 
    {
        createLeafNode(grammarAccess.getFMFSettingsAccess().getRightCurlyBracketKeyword_13(), null); 
    }
)
;





// Rule FMFProximaVisibleEnum
ruleFMFProximaVisibleEnum returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'VISIBLE' 
	{
        $current = grammarAccess.getFMFProximaVisibleEnumAccess().getVISIBLEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFProximaVisibleEnumAccess().getVISIBLEEnumLiteralDeclaration_0(), null); 
    }
)
    |(	'HIDDEN' 
	{
        $current = grammarAccess.getFMFProximaVisibleEnumAccess().getHIDDENEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFProximaVisibleEnumAccess().getHIDDENEnumLiteralDeclaration_1(), null); 
    }
));



// Rule FMFFidStyleEnum
ruleFMFFidStyleEnum returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'DISC' 
	{
        $current = grammarAccess.getFMFFidStyleEnumAccess().getDISCEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidStyleEnumAccess().getDISCEnumLiteralDeclaration_0(), null); 
    }
)
    |(	'SQUARE' 
	{
        $current = grammarAccess.getFMFFidStyleEnumAccess().getSQUAREEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidStyleEnumAccess().getSQUAREEnumLiteralDeclaration_1(), null); 
    }
)
    |(	'PENTAGON' 
	{
        $current = grammarAccess.getFMFFidStyleEnumAccess().getPENTAGONEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidStyleEnumAccess().getPENTAGONEnumLiteralDeclaration_2(), null); 
    }
)
    |(	'HEXAGON' 
	{
        $current = grammarAccess.getFMFFidStyleEnumAccess().getHEXAGONEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidStyleEnumAccess().getHEXAGONEnumLiteralDeclaration_3(), null); 
    }
)
    |(	'EIGHTSTAR' 
	{
        $current = grammarAccess.getFMFFidStyleEnumAccess().getEIGHTSTAREnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidStyleEnumAccess().getEIGHTSTAREnumLiteralDeclaration_4(), null); 
    }
));



// Rule FMFKind
ruleFMFKind returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'SIN_OSC' 
	{
        $current = grammarAccess.getFMFKindAccess().getSIN_OSCEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFKindAccess().getSIN_OSCEnumLiteralDeclaration_0(), null); 
    }
)
    |(	'SQR_OSC' 
	{
        $current = grammarAccess.getFMFKindAccess().getSQR_OSCEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFKindAccess().getSQR_OSCEnumLiteralDeclaration_1(), null); 
    }
)
    |(	'PULSE_OSC' 
	{
        $current = grammarAccess.getFMFKindAccess().getPULSE_OSCEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFKindAccess().getPULSE_OSCEnumLiteralDeclaration_2(), null); 
    }
)
    |(	'TRI_OSC' 
	{
        $current = grammarAccess.getFMFKindAccess().getTRI_OSCEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFKindAccess().getTRI_OSCEnumLiteralDeclaration_3(), null); 
    }
)
    |(	'SAW_OSC' 
	{
        $current = grammarAccess.getFMFKindAccess().getSAW_OSCEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFKindAccess().getSAW_OSCEnumLiteralDeclaration_4(), null); 
    }
)
    |(	'SEQUENCER' 
	{
        $current = grammarAccess.getFMFKindAccess().getSEQUENCEREnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFKindAccess().getSEQUENCEREnumLiteralDeclaration_5(), null); 
    }
)
    |(	'SAMPLER' 
	{
        $current = grammarAccess.getFMFKindAccess().getSAMPLEREnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFKindAccess().getSAMPLEREnumLiteralDeclaration_6(), null); 
    }
)
    |(	'ECHO' 
	{
        $current = grammarAccess.getFMFKindAccess().getECHOEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFKindAccess().getECHOEnumLiteralDeclaration_7(), null); 
    }
)
    |(	'REVERB' 
	{
        $current = grammarAccess.getFMFKindAccess().getREVERBEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFKindAccess().getREVERBEnumLiteralDeclaration_8(), null); 
    }
));



// Rule FMFFidFunctionEnum
ruleFMFFidFunctionEnum returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'KNOB' 
	{
        $current = grammarAccess.getFMFFidFunctionEnumAccess().getKNOBEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidFunctionEnumAccess().getKNOBEnumLiteralDeclaration_0(), null); 
    }
)
    |(	'NONE' 
	{
        $current = grammarAccess.getFMFFidFunctionEnumAccess().getNONEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidFunctionEnumAccess().getNONEEnumLiteralDeclaration_1(), null); 
    }
));





// Rule FMFFidColorEnum
ruleFMFFidColorEnum returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'Aquamarine' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getAquamarineEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getAquamarineEnumLiteralDeclaration_0(), null); 
    }
)
    |(	'Bakers_Chocolate' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getBakers_ChocolateEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getBakers_ChocolateEnumLiteralDeclaration_1(), null); 
    }
)
    |(	'Black' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getBlackEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getBlackEnumLiteralDeclaration_2(), null); 
    }
)
    |(	'Blue' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getBlueEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getBlueEnumLiteralDeclaration_3(), null); 
    }
)
    |(	'Brass' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getBrassEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getBrassEnumLiteralDeclaration_4(), null); 
    }
)
    |(	'Bright_Gold' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getBright_GoldEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getBright_GoldEnumLiteralDeclaration_5(), null); 
    }
)
    |(	'Brown' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getBrownEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getBrownEnumLiteralDeclaration_6(), null); 
    }
)
    |(	'Bronze' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getBronzeEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getBronzeEnumLiteralDeclaration_7(), null); 
    }
)
    |(	'Gold' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getGoldEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getGoldEnumLiteralDeclaration_8(), null); 
    }
)
    |(	'Grey' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getGreyEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getGreyEnumLiteralDeclaration_9(), null); 
    }
)
    |(	'Green' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getGreenEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getGreenEnumLiteralDeclaration_10(), null); 
    }
)
    |(	'Copper' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getCopperEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getCopperEnumLiteralDeclaration_11(), null); 
    }
)
    |(	'Coral' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getCoralEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getCoralEnumLiteralDeclaration_12(), null); 
    }
)
    |(	'Cyan' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getCyanEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getCyanEnumLiteralDeclaration_13(), null); 
    }
)
    |(	'Dark_Green' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getDark_GreenEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getDark_GreenEnumLiteralDeclaration_14(), null); 
    }
)
    |(	'Green_Yellow' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getGreen_YellowEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getGreen_YellowEnumLiteralDeclaration_15(), null); 
    }
)
    |(	'Magenta' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getMagentaEnumLiteralDeclaration_16().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getMagentaEnumLiteralDeclaration_16(), null); 
    }
)
    |(	'Maroon' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getMaroonEnumLiteralDeclaration_17().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getMaroonEnumLiteralDeclaration_17(), null); 
    }
)
    |(	'Medium_Blue' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getMedium_BlueEnumLiteralDeclaration_18().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getMedium_BlueEnumLiteralDeclaration_18(), null); 
    }
)
    |(	'Sienna' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getSiennaEnumLiteralDeclaration_19().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getSiennaEnumLiteralDeclaration_19(), null); 
    }
)
    |(	'Silver' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getSilverEnumLiteralDeclaration_20().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getSilverEnumLiteralDeclaration_20(), null); 
    }
)
    |(	'Salmon' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getSalmonEnumLiteralDeclaration_21().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getSalmonEnumLiteralDeclaration_21(), null); 
    }
)
    |(	'Orange' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getOrangeEnumLiteralDeclaration_22().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getOrangeEnumLiteralDeclaration_22(), null); 
    }
)
    |(	'Pink' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getPinkEnumLiteralDeclaration_23().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getPinkEnumLiteralDeclaration_23(), null); 
    }
)
    |(	'Red' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getRedEnumLiteralDeclaration_24().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getRedEnumLiteralDeclaration_24(), null); 
    }
)
    |(	'Summer_Sky' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getSummer_SkyEnumLiteralDeclaration_25().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getSummer_SkyEnumLiteralDeclaration_25(), null); 
    }
)
    |(	'Tan' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getTanEnumLiteralDeclaration_26().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getTanEnumLiteralDeclaration_26(), null); 
    }
)
    |(	'Thistle' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getThistleEnumLiteralDeclaration_27().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getThistleEnumLiteralDeclaration_27(), null); 
    }
)
    |(	'Turquoise' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getTurquoiseEnumLiteralDeclaration_28().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getTurquoiseEnumLiteralDeclaration_28(), null); 
    }
)
    |(	'Very_Dark_Brown' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getVery_Dark_BrownEnumLiteralDeclaration_29().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getVery_Dark_BrownEnumLiteralDeclaration_29(), null); 
    }
)
    |(	'Very_Light_Grey' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getVery_Light_GreyEnumLiteralDeclaration_30().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getVery_Light_GreyEnumLiteralDeclaration_30(), null); 
    }
)
    |(	'Violet' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getVioletEnumLiteralDeclaration_31().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getVioletEnumLiteralDeclaration_31(), null); 
    }
)
    |(	'Violet_Red' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getViolet_RedEnumLiteralDeclaration_32().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getViolet_RedEnumLiteralDeclaration_32(), null); 
    }
)
    |(	'Wheat' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getWheatEnumLiteralDeclaration_33().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getWheatEnumLiteralDeclaration_33(), null); 
    }
)
    |(	'White' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getWhiteEnumLiteralDeclaration_34().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getWhiteEnumLiteralDeclaration_34(), null); 
    }
)
    |(	'Yellow' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getYellowEnumLiteralDeclaration_35().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getYellowEnumLiteralDeclaration_35(), null); 
    }
)
    |(	'Yellow_Green' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getYellow_GreenEnumLiteralDeclaration_36().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getYellow_GreenEnumLiteralDeclaration_36(), null); 
    }
)
    |(	'Dark_Yellow' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getDark_YellowEnumLiteralDeclaration_37().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getDark_YellowEnumLiteralDeclaration_37(), null); 
    }
)
    |(	'Bronze_II' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getBronze_IIEnumLiteralDeclaration_38().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getBronze_IIEnumLiteralDeclaration_38(), null); 
    }
)
    |(	'Cadet_Blue' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getCadet_BlueEnumLiteralDeclaration_39().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getCadet_BlueEnumLiteralDeclaration_39(), null); 
    }
)
    |(	'Cool_Copper' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getCool_CopperEnumLiteralDeclaration_40().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getCool_CopperEnumLiteralDeclaration_40(), null); 
    }
)
    |(	'Corn_Flower_Blue' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getCorn_Flower_BlueEnumLiteralDeclaration_41().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getCorn_Flower_BlueEnumLiteralDeclaration_41(), null); 
    }
)
    |(	'Dark_Brown' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getDark_BrownEnumLiteralDeclaration_42().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getDark_BrownEnumLiteralDeclaration_42(), null); 
    }
)
    |(	'Dark_Green_Copper' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getDark_Green_CopperEnumLiteralDeclaration_43().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getDark_Green_CopperEnumLiteralDeclaration_43(), null); 
    }
)
    |(	'Dark_Olive_Green' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getDark_Olive_GreenEnumLiteralDeclaration_44().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getDark_Olive_GreenEnumLiteralDeclaration_44(), null); 
    }
)
    |(	'Dark_Orchid' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getDark_OrchidEnumLiteralDeclaration_45().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getDark_OrchidEnumLiteralDeclaration_45(), null); 
    }
)
    |(	'Dark_Purple' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getDark_PurpleEnumLiteralDeclaration_46().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getDark_PurpleEnumLiteralDeclaration_46(), null); 
    }
)
    |(	'Dark_Slate_Blue' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getDark_Slate_BlueEnumLiteralDeclaration_47().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getDark_Slate_BlueEnumLiteralDeclaration_47(), null); 
    }
)
    |(	'Dark_Turquoise' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getDark_TurquoiseEnumLiteralDeclaration_48().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getDark_TurquoiseEnumLiteralDeclaration_48(), null); 
    }
)
    |(	'Dark_Tan' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getDark_TanEnumLiteralDeclaration_49().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getDark_TanEnumLiteralDeclaration_49(), null); 
    }
)
    |(	'Dark_Wood' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getDark_WoodEnumLiteralDeclaration_50().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getDark_WoodEnumLiteralDeclaration_50(), null); 
    }
)
    |(	'Dim_Grey' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getDim_GreyEnumLiteralDeclaration_51().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getDim_GreyEnumLiteralDeclaration_51(), null); 
    }
)
    |(	'Dusty_Rose' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getDusty_RoseEnumLiteralDeclaration_52().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getDusty_RoseEnumLiteralDeclaration_52(), null); 
    }
)
    |(	'Feldspar' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getFeldsparEnumLiteralDeclaration_53().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getFeldsparEnumLiteralDeclaration_53(), null); 
    }
)
    |(	'Firebrick' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getFirebrickEnumLiteralDeclaration_54().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getFirebrickEnumLiteralDeclaration_54(), null); 
    }
)
    |(	'Forest_Green' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getForest_GreenEnumLiteralDeclaration_55().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getForest_GreenEnumLiteralDeclaration_55(), null); 
    }
)
    |(	'Goldenrod' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getGoldenrodEnumLiteralDeclaration_56().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getGoldenrodEnumLiteralDeclaration_56(), null); 
    }
)
    |(	'Green_Copper' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getGreen_CopperEnumLiteralDeclaration_57().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getGreen_CopperEnumLiteralDeclaration_57(), null); 
    }
)
    |(	'Hunter_Green' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getHunter_GreenEnumLiteralDeclaration_58().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getHunter_GreenEnumLiteralDeclaration_58(), null); 
    }
)
    |(	'Indian_Red' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getIndian_RedEnumLiteralDeclaration_59().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getIndian_RedEnumLiteralDeclaration_59(), null); 
    }
)
    |(	'Khaki' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getKhakiEnumLiteralDeclaration_60().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getKhakiEnumLiteralDeclaration_60(), null); 
    }
)
    |(	'Light_Blue' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getLight_BlueEnumLiteralDeclaration_61().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getLight_BlueEnumLiteralDeclaration_61(), null); 
    }
)
    |(	'Light_Grey' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getLight_GreyEnumLiteralDeclaration_62().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getLight_GreyEnumLiteralDeclaration_62(), null); 
    }
)
    |(	'Light_Steel_Blue' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getLight_Steel_BlueEnumLiteralDeclaration_63().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getLight_Steel_BlueEnumLiteralDeclaration_63(), null); 
    }
)
    |(	'Light_Wood' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getLight_WoodEnumLiteralDeclaration_64().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getLight_WoodEnumLiteralDeclaration_64(), null); 
    }
)
    |(	'Lime_Green' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getLime_GreenEnumLiteralDeclaration_65().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getLime_GreenEnumLiteralDeclaration_65(), null); 
    }
)
    |(	'Mandarian_Orange' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getMandarian_OrangeEnumLiteralDeclaration_66().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getMandarian_OrangeEnumLiteralDeclaration_66(), null); 
    }
)
    |(	'Medium_Aquamarine' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getMedium_AquamarineEnumLiteralDeclaration_67().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getMedium_AquamarineEnumLiteralDeclaration_67(), null); 
    }
)
    |(	'Medium_Forest_Green' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getMedium_Forest_GreenEnumLiteralDeclaration_68().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getMedium_Forest_GreenEnumLiteralDeclaration_68(), null); 
    }
)
    |(	'Medium_Goldenrod' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getMedium_GoldenrodEnumLiteralDeclaration_69().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getMedium_GoldenrodEnumLiteralDeclaration_69(), null); 
    }
)
    |(	'Medium_Orchid' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getMedium_OrchidEnumLiteralDeclaration_70().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getMedium_OrchidEnumLiteralDeclaration_70(), null); 
    }
)
    |(	'Medium_Sea_Green' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getMedium_Sea_GreenEnumLiteralDeclaration_71().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getMedium_Sea_GreenEnumLiteralDeclaration_71(), null); 
    }
)
    |(	'Medium_Slate_Blue' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getMedium_Slate_BlueEnumLiteralDeclaration_72().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getMedium_Slate_BlueEnumLiteralDeclaration_72(), null); 
    }
)
    |(	'Medium_Spring_Green' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getMedium_Spring_GreenEnumLiteralDeclaration_73().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getMedium_Spring_GreenEnumLiteralDeclaration_73(), null); 
    }
)
    |(	'Medium_Turquoise' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getMedium_TurquoiseEnumLiteralDeclaration_74().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getMedium_TurquoiseEnumLiteralDeclaration_74(), null); 
    }
)
    |(	'Medium_Violet_Red' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getMedium_Violet_RedEnumLiteralDeclaration_75().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getMedium_Violet_RedEnumLiteralDeclaration_75(), null); 
    }
)
    |(	'Medium_Wood' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getMedium_WoodEnumLiteralDeclaration_76().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getMedium_WoodEnumLiteralDeclaration_76(), null); 
    }
)
    |(	'Midnight_Blue' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getMidnight_BlueEnumLiteralDeclaration_77().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getMidnight_BlueEnumLiteralDeclaration_77(), null); 
    }
)
    |(	'Navy_Blue' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getNavy_BlueEnumLiteralDeclaration_78().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getNavy_BlueEnumLiteralDeclaration_78(), null); 
    }
)
    |(	'Neon_Blue' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getNeon_BlueEnumLiteralDeclaration_79().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getNeon_BlueEnumLiteralDeclaration_79(), null); 
    }
)
    |(	'Neon_Pink' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getNeon_PinkEnumLiteralDeclaration_80().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getNeon_PinkEnumLiteralDeclaration_80(), null); 
    }
)
    |(	'New_Midnight_Blue' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getNew_Midnight_BlueEnumLiteralDeclaration_81().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getNew_Midnight_BlueEnumLiteralDeclaration_81(), null); 
    }
)
    |(	'New_Tan' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getNew_TanEnumLiteralDeclaration_82().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getNew_TanEnumLiteralDeclaration_82(), null); 
    }
)
    |(	'Old_Gold' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getOld_GoldEnumLiteralDeclaration_83().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getOld_GoldEnumLiteralDeclaration_83(), null); 
    }
)
    |(	'Orange_Red' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getOrange_RedEnumLiteralDeclaration_84().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getOrange_RedEnumLiteralDeclaration_84(), null); 
    }
)
    |(	'Orchid' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getOrchidEnumLiteralDeclaration_85().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getOrchidEnumLiteralDeclaration_85(), null); 
    }
)
    |(	'Pale_Green' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getPale_GreenEnumLiteralDeclaration_86().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getPale_GreenEnumLiteralDeclaration_86(), null); 
    }
)
    |(	'Plum' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getPlumEnumLiteralDeclaration_87().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getPlumEnumLiteralDeclaration_87(), null); 
    }
)
    |(	'Quartz' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getQuartzEnumLiteralDeclaration_88().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getQuartzEnumLiteralDeclaration_88(), null); 
    }
)
    |(	'Rich_Blue' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getRich_BlueEnumLiteralDeclaration_89().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getRich_BlueEnumLiteralDeclaration_89(), null); 
    }
)
    |(	'Scarlet' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getScarletEnumLiteralDeclaration_90().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getScarletEnumLiteralDeclaration_90(), null); 
    }
)
    |(	'Sea_Green' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getSea_GreenEnumLiteralDeclaration_91().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getSea_GreenEnumLiteralDeclaration_91(), null); 
    }
)
    |(	'Semi_Sweet_Chocolate' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getSemi_Sweet_ChocolateEnumLiteralDeclaration_92().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getSemi_Sweet_ChocolateEnumLiteralDeclaration_92(), null); 
    }
)
    |(	'Sky_Blue' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getSky_BlueEnumLiteralDeclaration_93().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getSky_BlueEnumLiteralDeclaration_93(), null); 
    }
)
    |(	'Slate_Blue' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getSlate_BlueEnumLiteralDeclaration_94().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getSlate_BlueEnumLiteralDeclaration_94(), null); 
    }
)
    |(	'Spicy_Pink' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getSpicy_PinkEnumLiteralDeclaration_95().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getSpicy_PinkEnumLiteralDeclaration_95(), null); 
    }
)
    |(	'Spring_Green' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getSpring_GreenEnumLiteralDeclaration_96().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getSpring_GreenEnumLiteralDeclaration_96(), null); 
    }
)
    |(	'Steel_Blue' 
	{
        $current = grammarAccess.getFMFFidColorEnumAccess().getSteel_BlueEnumLiteralDeclaration_97().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFMFFidColorEnumAccess().getSteel_BlueEnumLiteralDeclaration_97(), null); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


